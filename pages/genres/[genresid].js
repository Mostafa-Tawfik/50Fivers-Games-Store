import Head from 'next/head'
import Main from '../../components/Main'
import styles from '../../styles/Action.module.scss'

export default function action({games, id}) {

  const genres = [
    { id: 4, name:'Action' },
    { id: 5, name:'RPG' },
    { id: 10, name:'Strategy' },
    { id: 14, name:'Simulation' },
    { id: 1, name:'Racing' },
    { id: 15, name:'Sports' },
    { id: 2, name:'Shooter' },
  ]

  // get page name dynamically
  const pageName = genres.filter(g => g.id == id).map(g => `${g.name} Games`)

  return (
    <div className={styles.container}>
      <Head>
        <title>Action Games</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <section className={styles["layout"]}>
        <main className={styles['main']}>
          <Main games={games} pageName={pageName}/>
        </main>
        
      </section>
    </div>
  )
}

// call the api to get featured games
export async function getServerSideProps(context) {

  const apiRoot= 'https://rawg.io/api/games'
  const id = context.params.genresid

  // handle the dates
  var date = new Date()
  var day = ("0" + (date.getDate())).slice(-2)
  var month = ("0" + (date.getMonth() + 1)).slice(-2)
  var year = date.getFullYear()

  // set last year
  date.setDate(date.getDate() - 365);
  var lastYear = (date.getFullYear())

  // fetch the data
  const res = await fetch(`${apiRoot}?${process.env.rawgkey}&genres=${id}&metacritic=70,100&dates=${lastYear}-${month}-${day},${year}-${month}-${day}&ordering=-metacritic`)

  const gameData = await res.json()

  return {
    props: {
      games: gameData,
      id
    },
  }
}